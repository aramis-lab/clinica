[tool.poetry]
name = "clinica"
version = "0.7.1"
description = "Software platform for clinical neuroimaging studies"
license = "MIT"
authors = ["ARAMIS Lab"]
maintainers = ["Clinica developers <clinica-user@inria.fr>"]
readme = "README.md"
homepage = "https://www.clinica.run"
repository = "https://github.com/aramis-lab/clinica.git"
documentation =  "https://aramislab.paris.inria.fr/clinica/docs/public/latest"
keywords = [
    "bids",
    "image processing",
    "machine learning",
    "neuroimaging",
    "neuroscience"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Image Processing"
]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
nibabel = "^2.3.3"
nipype = "^1.7.1"
argcomplete = "^1.9.4"
pandas = "^1.2"
jinja2 = "^2.10.1"
xvfbwrapper = "*"
numpy = "^1.17"
scikit-learn = "^1.0"
nilearn = "^0.7.0"
colorlog = "^5"
xgboost = "*"
scipy = "^1.7"
matplotlib = "*"
niflow-nipype1-workflows = "*"
scikit-image = "^0.19"
pydicom = "*"
networkx = "*"
click = "^8"
click-option-group = "^0.5"
xlrd = "*"
openpyxl = "*"
fsspec = "*"
# docs
mkdocs = {version = "^1.1", optional = true}
mkdocs-material = {version = ">=7.1.8", optional= true}
pymdown-extensions = {version = "*", optional = true}
attrs = ">=20.1.0"
cattrs = "^1.9.0"

[tool.poetry.dev-dependencies]
black = "*"
isort = "*"
pre-commit = "*"
pytest = "*"
pytest-timeout = "*"
pytest-xdist = "*"
pytest-cov = "^3.0.0"
nipy = "^0.5.0"

[tool.poetry.extras]
docs = [
    "mkdocs",
    "mkdocs-material",
    "pymdown-extensions"
]

[tool.poetry.scripts]
clinica = "clinica.cmdline:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
force-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.pytest_cache
  | _build
  | buck-out
  | build
  | dist
  | docs
  | clinica/lib
)/
'''

[tool.isort]
profile = "black"
